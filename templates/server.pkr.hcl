data "amazon-ami" "autogenerated_1" {
  filters = {
    architecture        = "x86_64"
    name                = "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64*"
    virtualization-type = "hvm"
  }
  most_recent = true
  owners      = ["099720109477"]
  profile     = "${var.profile}"
  region      = "${var.region}"
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "amazon-ebs" "autogenerated_1" {
  ami_description = "${var.project}-${var.env}"
  ami_name        = "packer-instance-${local.timestamp}"
  instance_type   = "${var.instance_type}"
  launch_block_device_mappings {
    delete_on_termination = true
    device_name           = "/dev/sda1"
    volume_size           = "${var.volume_size}"
    volume_type           = "gp2"
  }
  profile      = "${var.profile}"
  region       = "${var.region}"
  source_ami   = "${data.amazon-ami.autogenerated_1.id}"
  ssh_timeout  = "10m"
  ssh_username = "ubuntu"
  tags = {
    Environment = "${var.env}"
    Name        = "${var.project}-${var.env}-${timestamp()}"
    Packer      = "true"
    Stage       = "${var.env}"
    Type        = "${var.env}"
  }
}

build {
  sources = ["source.amazon-ebs.autogenerated_1"]

  provisioner "shell" {
    execute_command = "{{ .Vars }} sudo -S -E bash '{{ .Path }}'"
    inline          = ["set -eux", "apt-add-repository ppa:ansible/ansible-2.8", "apt-get -y update", "apt-get -y install python-minimal python-apt", "apt-get -y install ansible"]
    pause_before    = "10s"
  }
}
